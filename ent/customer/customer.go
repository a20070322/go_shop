// Code generated by entc, DO NOT EDIT.

package customer

import (
	"time"
)

const (
	// Label holds the string label denoting the customer type in the database.
	Label = "customer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldMiniOpenid holds the string denoting the mini_openid field in the database.
	FieldMiniOpenid = "mini_openid"
	// FieldWechatOpenid holds the string denoting the wechat_openid field in the database.
	FieldWechatOpenid = "wechat_openid"
	// FieldUnionID holds the string denoting the union_id field in the database.
	FieldUnionID = "union_id"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldIsDisable holds the string denoting the is_disable field in the database.
	FieldIsDisable = "is_disable"
	// EdgeAddress holds the string denoting the address edge name in mutations.
	EdgeAddress = "address"
	// EdgeOrderInfo holds the string denoting the order_info edge name in mutations.
	EdgeOrderInfo = "order_info"
	// Table holds the table name of the customer in the database.
	Table = "customers"
	// AddressTable is the table the holds the address relation/edge.
	AddressTable = "customer_addresses"
	// AddressInverseTable is the table name for the CustomerAddress entity.
	// It exists in this package in order to avoid circular dependency with the "customeraddress" package.
	AddressInverseTable = "customer_addresses"
	// AddressColumn is the table column denoting the address relation/edge.
	AddressColumn = "customer_address"
	// OrderInfoTable is the table the holds the order_info relation/edge.
	OrderInfoTable = "order_infos"
	// OrderInfoInverseTable is the table name for the OrderInfo entity.
	// It exists in this package in order to avoid circular dependency with the "orderinfo" package.
	OrderInfoInverseTable = "order_infos"
	// OrderInfoColumn is the table column denoting the order_info relation/edge.
	OrderInfoColumn = "customer_order_info"
)

// Columns holds all SQL columns for customer fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldMiniOpenid,
	FieldWechatOpenid,
	FieldUnionID,
	FieldPhone,
	FieldAvatar,
	FieldIsDisable,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsDisable holds the default value on creation for the "is_disable" field.
	DefaultIsDisable bool
)
