// Code generated by entc, DO NOT EDIT.

package goodsspuimgs

import (
	"time"
)

const (
	// Label holds the string label denoting the goodsspuimgs type in the database.
	Label = "goods_spu_imgs"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldImgName holds the string denoting the img_name field in the database.
	FieldImgName = "img_name"
	// FieldImgPath holds the string denoting the img_path field in the database.
	FieldImgPath = "img_path"
	// EdgeGoodsSpu holds the string denoting the goods_spu edge name in mutations.
	EdgeGoodsSpu = "goods_spu"
	// Table holds the table name of the goodsspuimgs in the database.
	Table = "goods_spu_imgs"
	// GoodsSpuTable is the table the holds the goods_spu relation/edge.
	GoodsSpuTable = "goods_spu_imgs"
	// GoodsSpuInverseTable is the table name for the GoodsSpu entity.
	// It exists in this package in order to avoid circular dependency with the "goodsspu" package.
	GoodsSpuInverseTable = "goods_spus"
	// GoodsSpuColumn is the table column denoting the goods_spu relation/edge.
	GoodsSpuColumn = "goods_spu_goods_spu_imgs"
)

// Columns holds all SQL columns for goodsspuimgs fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldImgName,
	FieldImgPath,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "goods_spu_imgs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"goods_spu_goods_spu_imgs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
