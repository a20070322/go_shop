// Code generated by entc, DO NOT EDIT.

package orderinfo

import (
	"time"
)

const (
	// Label holds the string label denoting the orderinfo type in the database.
	Label = "order_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldOrderNumber holds the string denoting the order_number field in the database.
	FieldOrderNumber = "order_number"
	// FieldPayMethod holds the string denoting the pay_method field in the database.
	FieldPayMethod = "pay_method"
	// FieldPayMoney holds the string denoting the pay_money field in the database.
	FieldPayMoney = "pay_money"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldDeliveryStatus holds the string denoting the delivery_status field in the database.
	FieldDeliveryStatus = "delivery_status"
	// EdgeCustomer holds the string denoting the customer edge name in mutations.
	EdgeCustomer = "customer"
	// EdgeOrderGoodsSku holds the string denoting the order_goods_sku edge name in mutations.
	EdgeOrderGoodsSku = "order_goods_sku"
	// EdgeOrderAddress holds the string denoting the order_address edge name in mutations.
	EdgeOrderAddress = "order_address"
	// EdgeWechatPay holds the string denoting the wechat_pay edge name in mutations.
	EdgeWechatPay = "wechat_pay"
	// Table holds the table name of the orderinfo in the database.
	Table = "order_infos"
	// CustomerTable is the table the holds the customer relation/edge.
	CustomerTable = "order_infos"
	// CustomerInverseTable is the table name for the Customer entity.
	// It exists in this package in order to avoid circular dependency with the "customer" package.
	CustomerInverseTable = "customers"
	// CustomerColumn is the table column denoting the customer relation/edge.
	CustomerColumn = "customer_order_info"
	// OrderGoodsSkuTable is the table the holds the order_goods_sku relation/edge.
	OrderGoodsSkuTable = "order_goods_skus"
	// OrderGoodsSkuInverseTable is the table name for the OrderGoodsSku entity.
	// It exists in this package in order to avoid circular dependency with the "ordergoodssku" package.
	OrderGoodsSkuInverseTable = "order_goods_skus"
	// OrderGoodsSkuColumn is the table column denoting the order_goods_sku relation/edge.
	OrderGoodsSkuColumn = "order_info_order_goods_sku"
	// OrderAddressTable is the table the holds the order_address relation/edge.
	OrderAddressTable = "order_addresses"
	// OrderAddressInverseTable is the table name for the OrderAddress entity.
	// It exists in this package in order to avoid circular dependency with the "orderaddress" package.
	OrderAddressInverseTable = "order_addresses"
	// OrderAddressColumn is the table column denoting the order_address relation/edge.
	OrderAddressColumn = "order_info_order_address"
	// WechatPayTable is the table the holds the wechat_pay relation/edge.
	WechatPayTable = "we_chat_pays"
	// WechatPayInverseTable is the table name for the WeChatPay entity.
	// It exists in this package in order to avoid circular dependency with the "wechatpay" package.
	WechatPayInverseTable = "we_chat_pays"
	// WechatPayColumn is the table column denoting the wechat_pay relation/edge.
	WechatPayColumn = "order_info_wechat_pay"
)

// Columns holds all SQL columns for orderinfo fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldOrderNumber,
	FieldPayMethod,
	FieldPayMoney,
	FieldRemark,
	FieldStatus,
	FieldDeliveryStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "order_infos"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"customer_order_info",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultDeliveryStatus holds the default value on creation for the "delivery_status" field.
	DefaultDeliveryStatus int8
)
