// Code generated by entc, DO NOT EDIT.

package goodsspecsoption

import (
	"time"
)

const (
	// Label holds the string label denoting the goodsspecsoption type in the database.
	Label = "goods_specs_option"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldSpecsOptionValue holds the string denoting the specs_option_value field in the database.
	FieldSpecsOptionValue = "specs_option_value"
	// EdgeGoodsSpecs holds the string denoting the goods_specs edge name in mutations.
	EdgeGoodsSpecs = "goods_specs"
	// EdgeGoodsSku holds the string denoting the goods_sku edge name in mutations.
	EdgeGoodsSku = "goods_sku"
	// Table holds the table name of the goodsspecsoption in the database.
	Table = "goods_specs_options"
	// GoodsSpecsTable is the table the holds the goods_specs relation/edge.
	GoodsSpecsTable = "goods_specs_options"
	// GoodsSpecsInverseTable is the table name for the GoodsSpecs entity.
	// It exists in this package in order to avoid circular dependency with the "goodsspecs" package.
	GoodsSpecsInverseTable = "goods_specs"
	// GoodsSpecsColumn is the table column denoting the goods_specs relation/edge.
	GoodsSpecsColumn = "goods_specs_goods_specs_option"
	// GoodsSkuTable is the table the holds the goods_sku relation/edge. The primary key declared below.
	GoodsSkuTable = "goods_specs_option_goods_sku"
	// GoodsSkuInverseTable is the table name for the GoodsSku entity.
	// It exists in this package in order to avoid circular dependency with the "goodssku" package.
	GoodsSkuInverseTable = "goods_skus"
)

// Columns holds all SQL columns for goodsspecsoption fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldSpecsOptionValue,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "goods_specs_options"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"goods_specs_goods_specs_option",
}

var (
	// GoodsSkuPrimaryKey and GoodsSkuColumn2 are the table columns denoting the
	// primary key for the goods_sku relation (M2M).
	GoodsSkuPrimaryKey = []string{"goods_specs_option_id", "goods_sku_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
